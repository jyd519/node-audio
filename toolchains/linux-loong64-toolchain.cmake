message(STATUS "Using cross compilation toolchain")

set (CMAKE_SYSTEM_NAME Linux)
set (CMAKE_SYSTEM_PROCESSOR loong64)

# Set cross compile target os
set (CROSSCOMPILING_TARGET_OS "LINUX")
set (TARGET_OS "LINUX")

## Set name if not defined as argument ##
if (NOT TOOLCHAIN_CROSS_TRIPLET)
	set(TOOLCHAIN_CROSS_TRIPLET "loongarch64-linux-gnu")
endif ()

# Important: Set PKG_CONFIG_LIBDIR
set(CMAKE_FIND_ROOT_PATH  $ENV{LA64_INSTALL_PATH}/loongarch64-linux-gnu/sysroot)
SET(ENV{PKG_CONFIG_LIBDIR} ${CMAKE_FIND_ROOT_PATH}/lib/pkgconfig)

## Get path to the toolchain using ENV ##
if (DEFINED ENV{TOOLCHAIN_CROSS_COMPILE})
	string(REPLACE "\\" "/" TOOLCHAIN_CROSS_BIN_FOLDER "$ENV{TOOLCHAIN_CROSS_COMPILE}/bin/")
else ()
	set(TOOLCHAIN_CROSS_BIN_FOLDER "")
endif()
if (WIN32)
    set(TOOLCHAIN_CROSS_BIN_EXTENSION ".exe")
endif (WIN32)


set(CMAKE_C_COMPILER "${TOOLCHAIN_CROSS_BIN_FOLDER}${TOOLCHAIN_CROSS_TRIPLET}-gcc${TOOLCHAIN_CROSS_BIN_EXTENSION}")
set(CMAKE_CXX_COMPILER "${TOOLCHAIN_CROSS_BIN_FOLDER}${TOOLCHAIN_CROSS_TRIPLET}-g++${TOOLCHAIN_CROSS_BIN_EXTENSION}")

message(STATUS "CMAKE_C_COMPILER: ${CMAKE_C_COMPILER}")
message(STATUS "CMAKE_CXX_COMPILER: ${CMAKE_CXX_COMPILER}")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# include(${CMAKE_CURRENT_LIST_DIR}/../linux-loong64/conan_toolchain.cmake)
